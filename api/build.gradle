import org.apache.commons.io.FileUtils
import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

import java.nio.charset.Charset

plugins {
    id 'java'
    id 'org.openapi.generator' version "${openapiGeneratorVersion}"
}

version '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.openapitools:openapi-generator-gradle-plugin:${openapiGeneratorVersion}"
}

task generateBeApi(type: GenerateTask) {
    inputSpec = "${projectDir}/src/main/resources/api.yml"
    generatorName = 'spring'
    apiPackage = 'com.zuehlke.hackathon.peoplefinder.api'
    modelPackage = 'com.zuehlke.hackathon.peoplefinder.model'
    outputDir = "${buildDir}/be"
    apiFilesConstrainedTo = [""]
    modelFilesConstrainedTo = [""]
    supportingFilesConstrainedTo = ["pom.xml"]
    additionalProperties = [
        artifactId: 'peoplefinder-api',
        groupId: 'com.zuehlke.hackathon.peoplefinder',
        interfaceOnly: true,
        skipDefaultInterface: true
    ]
}

task workarounds(dependsOn: generateBeApi) {
    doLast {
        file = null
        content = null

        // Use Person as a key in the map instead String. Open API Generator supports only String as key
        file = "${buildDir}/be/src/main/java/com/zuehlke/hackathon/peoplefinder/model/Team.java"
        content = FileUtils.readFileToString(new File(file), Charset.defaultCharset())
                .replaceAll('Map<String, Criteria>', 'Map<Person, Criteria>')
                .replaceAll('String key', 'Person key')
        FileUtils.writeStringToFile new File(file), content, Charset.defaultCharset()

        // Use Java version 11 instead 8. Open API Generator seems to not provide a clean parameter
        file = "${buildDir}/be/pom.xml"
        content = FileUtils.readFileToString(new File(file), Charset.defaultCharset())
                .replaceAll('<java.version>1.8</java.version>', '<java.version>11</java.version>')
        FileUtils.writeStringToFile new File(file), content, Charset.defaultCharset()
    }
}

task compileBeApi(type: Exec, dependsOn: workarounds) {
    commandLine 'cmd', '/c', 'mvnw.cmd', '-f', "${buildDir}/be", 'install'
}

task generateFeApi(type: GenerateTask) {
    inputSpec = "${projectDir}/src/main/resources/api.yml"
    generatorName = 'typescript-angular'
    outputDir = "${buildDir}/fe"
    additionalProperties = [
            'npmName': 'peoplefinder-frontend',
            'serviceSuffix': 'ServiceApi'
    ]
}

task copyFeApi(dependsOn: generateFeApi) {
    doLast {
        copy {
            from "${buildDir}/fe/api"
            into "${rootDir}/frontend/peoplefinder-api/api"
        }
        copy {
            from "${buildDir}/fe/model"
            into "${rootDir}/frontend/peoplefinder-api/model"
        }
        copy {
            from "${buildDir}/fe/encoder.ts"
            into "${rootDir}/frontend/peoplefinder-api"
        }
        copy {
            from "${buildDir}/fe/variables.ts"
            into "${rootDir}/frontend/peoplefinder-api"
        }
        copy {
            from "${buildDir}/fe/configuration.ts"
            into "${rootDir}/frontend/peoplefinder-api"
        }
    }
}

task prepareApis(dependsOn: [compileBeApi, copyFeApi]) {
}
